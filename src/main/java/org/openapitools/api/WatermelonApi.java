/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.InlineResponse200;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-02-25T11:10:44.340894+09:00[Asia/Tokyo]")

@Validated
@Api(value = "watermelon", description = "the watermelon API")
public interface WatermelonApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /watermelon : 最初のAPI
     * 一番最初に作ったAPIです。
     *
     * @param firstFruit  (optional)
     * @param secondFruit  (optional)
     * @return  (status code 200)
     */
    @ApiOperation(value = "最初のAPI", nickname = "watermelonGet", notes = "一番最初に作ったAPIです。", response = InlineResponse200.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = InlineResponse200.class) })
    @RequestMapping(value = "/watermelon",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse200> watermelonGet(@ApiParam(value = "") @Valid @RequestParam(value = "first_fruit", required = false) String firstFruit,@ApiParam(value = "") @Valid @RequestParam(value = "second_fruit", required = false) String secondFruit) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String combine_fruit = "";
                    if (firstFruit.equals(secondFruit)){
                        if (firstFruit.equals("いちご")) {
                            combine_fruit = "ぶどう";
                        } else if (firstFruit.equals("ぶどう")) {
                            combine_fruit = "デコポン";
                        } else if (firstFruit.equals("デコポン")) {
                            combine_fruit = "かき";
                        } else if (firstFruit.equals("かき")) {
                            combine_fruit = "りんご";
                        } else if (firstFruit.equals("りんご")) {
                            combine_fruit = "なし";
                        } else if (firstFruit.equals("なし")) {
                            combine_fruit = "もも";
                        }
                    }
                    String exampleString = "{ \"combine_fruit\" : \"" + combine_fruit + "\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
